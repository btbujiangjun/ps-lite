// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/meta_message.proto

#ifndef PROTOBUF_proto_2fmeta_5fmessage_2eproto__INCLUDED
#define PROTOBUF_proto_2fmeta_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ps {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_2fmeta_5fmessage_2eproto();
void protobuf_AssignDesc_proto_2fmeta_5fmessage_2eproto();
void protobuf_ShutdownFile_proto_2fmeta_5fmessage_2eproto();

class MetaMessage;

// ===================================================================

class MetaMessage : public ::google::protobuf::Message {
 public:
  MetaMessage();
  virtual ~MetaMessage();

  MetaMessage(const MetaMessage& from);

  inline MetaMessage& operator=(const MetaMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetaMessage& default_instance();

  void Swap(MetaMessage* other);

  // implements Message ----------------------------------------------

  MetaMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetaMessage& from);
  void MergeFrom(const MetaMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline ::google::protobuf::int32 head() const;
  inline void set_head(::google::protobuf::int32 value);

  // optional bytes body = 2;
  inline bool has_body() const;
  inline void clear_body();
  static const int kBodyFieldNumber = 2;
  inline const ::std::string& body() const;
  inline void set_body(const ::std::string& value);
  inline void set_body(const char* value);
  inline void set_body(const void* value, size_t size);
  inline ::std::string* mutable_body();
  inline ::std::string* release_body();
  inline void set_allocated_body(::std::string* body);

  // optional bool control = 3 [default = false];
  inline bool has_control() const;
  inline void clear_control();
  static const int kControlFieldNumber = 3;
  inline bool control() const;
  inline void set_control(bool value);

  // optional bool request = 4 [default = false];
  inline bool has_request() const;
  inline void clear_request();
  static const int kRequestFieldNumber = 4;
  inline bool request() const;
  inline void set_request(bool value);

  // optional int32 app_id = 5;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 5;
  inline ::google::protobuf::int32 app_id() const;
  inline void set_app_id(::google::protobuf::int32 value);

  // optional int32 timestamp = 6;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  inline ::google::protobuf::int32 timestamp() const;
  inline void set_timestamp(::google::protobuf::int32 value);

  // optional bool with_key = 7 [default = false];
  inline bool has_with_key() const;
  inline void clear_with_key();
  static const int kWithKeyFieldNumber = 7;
  inline bool with_key() const;
  inline void set_with_key(bool value);

  // repeated int32 value_type = 8 [packed = true];
  inline int value_type_size() const;
  inline void clear_value_type();
  static const int kValueTypeFieldNumber = 8;
  inline ::google::protobuf::int32 value_type(int index) const;
  inline void set_value_type(int index, ::google::protobuf::int32 value);
  inline void add_value_type(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      value_type() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_value_type();

  // @@protoc_insertion_point(class_scope:ps.MetaMessage)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_body();
  inline void clear_has_body();
  inline void set_has_control();
  inline void clear_has_control();
  inline void set_has_request();
  inline void clear_has_request();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_with_key();
  inline void clear_has_with_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* body_;
  ::google::protobuf::int32 head_;
  bool control_;
  bool request_;
  bool with_key_;
  ::google::protobuf::int32 app_id_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > value_type_;
  mutable int _value_type_cached_byte_size_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_proto_2fmeta_5fmessage_2eproto();
  friend void protobuf_AssignDesc_proto_2fmeta_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_proto_2fmeta_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static MetaMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// MetaMessage

// optional int32 head = 1;
inline bool MetaMessage::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetaMessage::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetaMessage::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetaMessage::clear_head() {
  head_ = 0;
  clear_has_head();
}
inline ::google::protobuf::int32 MetaMessage::head() const {
  return head_;
}
inline void MetaMessage::set_head(::google::protobuf::int32 value) {
  set_has_head();
  head_ = value;
}

// optional bytes body = 2;
inline bool MetaMessage::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetaMessage::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetaMessage::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetaMessage::clear_body() {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    body_->clear();
  }
  clear_has_body();
}
inline const ::std::string& MetaMessage::body() const {
  return *body_;
}
inline void MetaMessage::set_body(const ::std::string& value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void MetaMessage::set_body(const char* value) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(value);
}
inline void MetaMessage::set_body(const void* value, size_t size) {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  body_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MetaMessage::mutable_body() {
  set_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    body_ = new ::std::string;
  }
  return body_;
}
inline ::std::string* MetaMessage::release_body() {
  clear_has_body();
  if (body_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = body_;
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MetaMessage::set_allocated_body(::std::string* body) {
  if (body_ != &::google::protobuf::internal::kEmptyString) {
    delete body_;
  }
  if (body) {
    set_has_body();
    body_ = body;
  } else {
    clear_has_body();
    body_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool control = 3 [default = false];
inline bool MetaMessage::has_control() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetaMessage::set_has_control() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetaMessage::clear_has_control() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetaMessage::clear_control() {
  control_ = false;
  clear_has_control();
}
inline bool MetaMessage::control() const {
  return control_;
}
inline void MetaMessage::set_control(bool value) {
  set_has_control();
  control_ = value;
}

// optional bool request = 4 [default = false];
inline bool MetaMessage::has_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MetaMessage::set_has_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MetaMessage::clear_has_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MetaMessage::clear_request() {
  request_ = false;
  clear_has_request();
}
inline bool MetaMessage::request() const {
  return request_;
}
inline void MetaMessage::set_request(bool value) {
  set_has_request();
  request_ = value;
}

// optional int32 app_id = 5;
inline bool MetaMessage::has_app_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MetaMessage::set_has_app_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MetaMessage::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MetaMessage::clear_app_id() {
  app_id_ = 0;
  clear_has_app_id();
}
inline ::google::protobuf::int32 MetaMessage::app_id() const {
  return app_id_;
}
inline void MetaMessage::set_app_id(::google::protobuf::int32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional int32 timestamp = 6;
inline bool MetaMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MetaMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MetaMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MetaMessage::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 MetaMessage::timestamp() const {
  return timestamp_;
}
inline void MetaMessage::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional bool with_key = 7 [default = false];
inline bool MetaMessage::has_with_key() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MetaMessage::set_has_with_key() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MetaMessage::clear_has_with_key() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MetaMessage::clear_with_key() {
  with_key_ = false;
  clear_has_with_key();
}
inline bool MetaMessage::with_key() const {
  return with_key_;
}
inline void MetaMessage::set_with_key(bool value) {
  set_has_with_key();
  with_key_ = value;
}

// repeated int32 value_type = 8 [packed = true];
inline int MetaMessage::value_type_size() const {
  return value_type_.size();
}
inline void MetaMessage::clear_value_type() {
  value_type_.Clear();
}
inline ::google::protobuf::int32 MetaMessage::value_type(int index) const {
  return value_type_.Get(index);
}
inline void MetaMessage::set_value_type(int index, ::google::protobuf::int32 value) {
  value_type_.Set(index, value);
}
inline void MetaMessage::add_value_type(::google::protobuf::int32 value) {
  value_type_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MetaMessage::value_type() const {
  return value_type_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MetaMessage::mutable_value_type() {
  return &value_type_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ps

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fmeta_5fmessage_2eproto__INCLUDED
